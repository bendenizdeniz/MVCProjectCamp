@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Yeni Yazar Ekleme</h1>
<br />
@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))   //function, controller, runtime method
{
    <div class="form-group">
        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UserName)
        <br />
        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.UserSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UserSurname)
        <br />
        @Html.Label("Yazar Mail")
        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterMail)
        <br />
        @Html.Label("Yazar Password")
        @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterPassword)
        <br />
        @Html.Label("Yazar Image")
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage)
        <br />
        @Html.Label("Yazar Hakkında")
        @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout)
        <br />
        <button class="btn btn-info">Yazarı Ekle</button>
    </div>
}
